#!/bin/bash
if [[ "$EUID" -ne 0 ]]; then
	echo "Sorry, you need to run this as root"
	exit
fi

function check_cur_webserver() {
    if [ -e /usr/local/lsws/bin/lshttpd ] ; then
	    if /usr/local/lsws/bin/lshttpd -v | grep -q Open ; then
		    # LiteSpeed/x.x.x Open
        	# echo 'You have OpenLiteSpeed installed...'
        	webserver_type='ols'
    	elif /usr/local/lsws/bin/lshttpd -v | grep -q Enterprise ; then
		    # LiteSpeed/x.x.x Enterprise
       		# echo 'You have LiteSpeed Enterprise installed...'
       		webserver_type='ols-enterprise'
    	fi
    else
        # echo 'You have Nginx installed...'
        webserver_type='nginx'
    fi
}
check_cur_webserver

install_memcached(){
	apt-get install -y memcached
	sed -i 's|OPTIONS=""|OPTIONS="-l 127.0.0.1 -U 0"|g' /etc/sysconfig/memcached
	#turn off UDP and bind to 127.0.0.1 only
	systemctl enable memcached
	systemctl start memcached
}

uninstall_memcached(){
    systemctl stop memcached
	apt-get remove -y memcached
}

while [[ -z $action ]]; do
    clear
    echo "What do you want to do?"
    echo "   1) Install Memcached"
    echo "   2) Enable Memcached for a site"
    echo "   3) Disable Memcached for a site"
    echo "   4) Clear Memcached cache"
    echo "   5) Restart Memcached"
    echo "   6) Remove Memcached"
    echo
    read -p "Action: " action
    until [[ -z "$action" || "$action" =~ ^[1-6]$ ]]; do
    	echo "$action: invalid selection."
    	read -p "Action: " action
    done
done

if [[ $action == "install_memcached" || $action == "1" ]]; then

    if hash memcached 2>/dev/null; then
        echo
        echo "Memcached is already installed!"
        exit
    fi
    
    install_memcached
    
    if [ "$webserver_type" = "nginx" ]; then
        # apt-get install memcached php5.6-memcache php7.1-memcache php7.2-memcache php7.3-memcache php7.4-memcache php8.0-memcache php8.1-memcache -y 
        apt-get install -y php?.?-memcache
        systemctl restart nginx
        systemctl restart php5.6-fpm
        systemctl restart php7.1-fpm
        systemctl restart php7.2-fpm
        systemctl restart php7.3-fpm
        systemctl restart php7.4-fpm
        systemctl restart php8.0-fpm
        systemctl restart php8.1-fpm
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        apt-get install -y lsphp??-memcached
        killall lsphp
        systemctl stop lsws >/dev/null 2>&1
        systemctl start lsws
    fi
    

    echo
    echo "Memcached has been installed. You can run this script again to enable it for a site."
    exit
fi


if [[ $action == "enable" || $action == "2" ]]; then

    while [[ -z $domain ]]; do
        echo
        echo "Please, select which site you want to work with"
        echo
        ls /var/www/ | grep -v html | nl
        read -p "Select site: " site_number
        number_of_sites=$(ls /var/www/ | grep -v html | wc -l)
        until [[ "$site_number" =~ ^[0-9]+$ && "$site_number" -le "$number_of_sites" ]]; do
	    	echo "$site_number: invalid selection."
	    	read -p "Select site: " site_number
	    done
        domain=$(ls /var/www/ | grep -v html | sed -n "$site_number"p)
    done

    if [[ -e /var/www/$domain/html/wp-content/object-cache.php ]]; then
        echo "An object cache is already enabled for $domain"
        echo
        echo "If you want to enable Memcached, the currently enabled cache system needs to be disabled first."
        exit
    fi

    user_name=$(echo $domain | cut -c1-32)

	# Delete all transients to get the options table as small as possible. Memcached only allows 1 MB object size and wp --skip-plugins adds the entire options table as a single object grrrrr...
	cd /var/www/$domain/html/
	su - "$user_name" -c "wp --skip-plugins transient delete --all"
	
    if [ "$webserver_type" = "nginx" ]; then
        # Install the WP object cache plugin for memcached for nginx
        su - "$user_name" -c "wget https://github.com/Automattic/wp-memcached/raw/master/object-cache.php -O /var/www/$domain/html/wp-content/object-cache.php"
        chmod -R g+w /var/www/$domain/html/wp-content/object-cache.php
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        # Enable memcached in the litespeed-cache for wp plugin settings.
        # https://docs.litespeedtech.com/lscache/lscwp/cli/
        su - "$user_name" -c "wp litespeed-option set object true && wp litespeed-option set object-port 11211 && wp litespeed-option set object-host localhost"
    fi
    
    
	

    echo
    echo "Memcached has been enabled for $domain"
    exit
fi


if [[ $action == "disable" || $action == "3" ]]; then

    while [[ -z $domain ]]; do
        echo
        echo "Please, select which site you want to work with"
        echo
        ls /var/www/ | grep -v html | nl
        read -p "Select site: " site_number
        number_of_sites=$(ls /var/www/ | grep -v html | wc -l)
        until [[ "$site_number" =~ ^[0-9]+$ && "$site_number" -le "$number_of_sites" ]]; do
	    	echo "$site_number: invalid selection."
	    	read -p "Select site: " site_number
	    done
        domain=$(ls /var/www/ | grep -v html | sed -n "$site_number"p)
    done
    
    user_name=$(echo $domain | cut -c1-32)
    
    if [ "$webserver_type" = "nginx" ]; then
        # Remove the WP object cache plugin for memcached for nginx
        rm -f /var/www/$domain/html/wp-content/object-cache.php
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        # Disable Object Memcached in the litespeed-cache for wp plugin settings.
        # https://docs.litespeedtech.com/lscache/lscwp/cli/
        # https://docs.litespeedtech.com/lscache/lscwp/cache/#object-tab
        su - "$user_name" -c "cd /var/www/$domain/html && wp litespeed-option set object false"
    fi

    echo
    echo "Memcached has been disabled for $domain"
    exit
fi


if [[ $action == "memcached_clear" || $action == "4" ]]; then
    (sleep 2; echo flush_all; sleep 2; echo quit; ) | telnet 127.0.0.1 11211
    echo
    echo "Memcached cache has been cleared"
    exit
fi


if [[ $action == "memcached_restart" || $action == "5" ]]; then
    systemctl restart memcached.service
    echo
    echo "Memcached server has been restarted"
    exit
fi


if [[ $action == "remove_memcached" || $action == "6" ]]; then

    uninstall_memcached
    
    if [ "$webserver_type" = "nginx" ]; then
        # apt-get remove memcached php5.6-memcache php7.1-memcache php7.2-memcache php7.3-memcache php7.4-memcache php8.0-memcache php8.1-memcache -y
        apt-get remove -y php?.?-memcache
        systemctl restart nginx
        systemctl restart php5.6-fpm
        systemctl restart php7.1-fpm
        systemctl restart php7.2-fpm
        systemctl restart php7.3-fpm
        systemctl restart php7.4-fpm
        systemctl restart php8.0-fpm
        systemctl restart php8.1-fpm
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        apt-get remove -y lsphp??-memcached
        killall lsphp
        systemctl stop lsws >/dev/null 2>&1
        systemctl start lsws
    fi

    echo
    echo "Memcached has been removed from the system."
    exit
fi
