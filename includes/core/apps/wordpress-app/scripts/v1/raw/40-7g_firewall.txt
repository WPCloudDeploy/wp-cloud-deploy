#!/bin/bash
if [[ "$EUID" -ne 0 ]]; then
	echo "Sorry, you need to run this as root"
	exit
fi

function check_cur_webserver() {
    if [ -e /usr/local/lsws/bin/lshttpd ] ; then
	    if /usr/local/lsws/bin/lshttpd -v | grep -q Open ; then
		    # LiteSpeed/x.x.x Open
        	# echo 'You have OpenLiteSpeed installed...'
        	webserver_type='ols'
    	elif /usr/local/lsws/bin/lshttpd -v | grep -q Enterprise ; then
		    # LiteSpeed/x.x.x Enterprise
       		# echo 'You have LiteSpeed Enterprise installed...'
       		webserver_type='ols-enterprise'
    	fi
    else
        # echo 'You have Nginx installed...'
        webserver_type='nginx'
    fi
}
check_cur_webserver

function restart_webserver(){
    # Restart Appropiate Webserver
    if [ "$webserver_type" = "nginx" ]; then
        # restart nginx
        systemctl restart nginx
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        # kill detached lsphp processes and restart ols
        killall lsphp >/dev/null 2>&1
        systemctl stop lsws >/dev/null 2>&1
        systemctl start lsws
    fi
}


while [[ -z $domain ]]; do
    clear
    echo "Please, select which site you want to work with"
    echo
    ls /var/www | grep -v html | nl
    read -p "Select site: " site_number
    number_of_sites=$(ls /var/www | grep -v html | wc -l)
    until [[ "$site_number" =~ ^[0-9]+$ && "$site_number" -le "$number_of_sites" ]]; do
		echo "$site_number: invalid selection."
		read -p "Select site: " site_number
	done
    domain=$(ls /var/www | grep -v html | sed -n "$site_number"p)
done

function disable_all_7g_nginx(){
    sed -i "/bad_bot_7g/d" /etc/nginx/sites-enabled/$domain
    sed -i "/bad_referer_7g/d" /etc/nginx/sites-enabled/$domain
    sed -i "/bad_querystring_7g/d" /etc/nginx/sites-enabled/$domain
    sed -i "/bad_request_7g/d" /etc/nginx/sites-enabled/$domain
    sed -i "/not_allowed_method_7g/d" /etc/nginx/sites-enabled/$domain
}

function enable_all_7g_nginx(){
    # important to escape the variable
    sed -i "/client_max_body_size/a if (\$bad_bot_7g) { return 403; }" /etc/nginx/sites-enabled/$domain
    sed -i "/client_max_body_size/a if (\$bad_referer_7g) { return 403; }" /etc/nginx/sites-enabled/$domain
    sed -i "/client_max_body_size/a if (\$bad_querystring_7g) { return 403; }" /etc/nginx/sites-enabled/$domain
    sed -i "/client_max_body_size/a if (\$bad_request_7g) { return 403; }" /etc/nginx/sites-enabled/$domain
    sed -i "/client_max_body_size/a if (\$not_allowed_method_7g) { return 405; }" /etc/nginx/sites-enabled/$domain
}


function disable_all_7g_ols(){
    mv /var/www/$domain/html/.htaccess-orig /var/www/$domain/html/.htaccess
}

function enable_all_7g_ols(){
    user_name=$(echo $domain | cut -c1-32)
    mv /var/www/$domain/html/.htaccess /var/www/$domain/html/.htaccess-orig
    wget -O /var/www/$domain/html/7G-Firewall.txt https://raw.githubusercontent.com/meramsey/blaqpanel/main/htaccess/7G-Firewall.txt
    cat /var/www/$domain/html/7G-Firewall.txt >> /var/www/$domain/html/.htaccess
    echo '# Add spacing between 7G and existing htaccess rules' >> /var/www/$domain/html/.htaccess
    cat /var/www/$domain/html/.htaccess-orig >> /var/www/$domain/html/.htaccess
    chown "${user_name}" /var/www/$domain/html/.htaccess
}


while [[ -z $action ]]; do
    echo "What do you want to do?"
    echo "   1) Enable 7G Firewall (All Rules)"
    echo "   2) Disable 7G Firewall (All Rules)"
    echo "   3) Enable 7G Firewall User Agent Rules"
    echo "   4) Disable 7G Firewall User Agent Rules"
    echo "   5) Enable 7G Firewall Referrer Rules"
    echo "   6) Disable 7G Firewall Referrer Rules"
    echo "   7) Enable 7G Firewall Query String Rules"
    echo "   8) Disable 7G Firewall Query String Rules"
    echo "   9) Enable 7G Firewall Request String Rules"
    echo "   10) Disable 7G Firewall Request String Rules"
    echo "   11) Enable 7G Firewall Request Method Rules"
    echo "   12) Disable 7G Firewall Request Method Rules "
    echo
    read -p "Action: " action
    until [[ -z "$action" || "$action" =~ ^[1-9]|1[0-2]$ ]]; do
    	echo "$action: invalid selection."
    	read -p "Action: " action
    done
done


if [[ $action == "enable_all_7g" || $action == "1" ]]; then
    if [ "$webserver_type" = "nginx" ]; then
        enable_all_7g_nginx
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        enable_all_7g_ols
    fi
    
    restart_webserver
    echo
    echo "Enabled 7G Firewall (All Rules) for $domain"
    exit

fi


if [[ $action == "disable_all_7g" || $action == "2" ]]; then
    if [ "$webserver_type" = "nginx" ]; then
        disable_all_7g_nginx
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        disable_all_7g_ols
    fi

    restart_webserver
    echo
    echo "Disabled 7G Firewall (All Rules) for $domain"
    exit

fi


if [[ $action == "enable_user_agent_7g" || $action == "3" ]]; then
    
    if [ "$webserver_type" = "nginx" ]; then
        # important to escape the variable
        sed -i "/client_max_body_size/a if (\$bad_bot_7g) { return 403; }" /etc/nginx/sites-enabled/$domain
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        echo 
    fi

    restart_webserver
    echo
    echo "Enabled 7G Firewall User Agent Rules for $domain"
    exit

fi


if [[ $action == "disable_user_agent_7g" || $action == "4" ]]; then
    if [ "$webserver_type" = "nginx" ]; then
        sed -i "/bad_bot_7g/d" /etc/nginx/sites-enabled/$domain
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        echo 
    fi
    
    restart_webserver
    echo
    echo "Disabled 7G Firewall User Agent Rules for $domain"
    exit

fi


if [[ $action == "enable_referrer_7g" || $action == "5" ]]; then
    if [ "$webserver_type" = "nginx" ]; then
        # important to escape the variable
        sed -i "/client_max_body_size/a if (\$bad_referer_7g) { return 403; }" /etc/nginx/sites-enabled/$domain
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        echo 
    fi
    
    restart_webserver
    echo
    echo "Enabled 7G Firewall Referrer Rules for $domain"
    exit

fi


if [[ $action == "disable_referrer_7g" || $action == "6" ]]; then
    if [ "$webserver_type" = "nginx" ]; then
        sed -i "/bad_referer_7g/d" /etc/nginx/sites-enabled/$domain
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        echo 
    fi
    
    restart_webserver
    echo
    echo "Disabled 7G Firewall Referrer Rules for $domain"
    exit

fi


if [[ $action == "enable_query_string_7g" || $action == "7" ]]; then
    if [ "$webserver_type" = "nginx" ]; then
        # important to escape the variable
        sed -i "/client_max_body_size/a if (\$bad_querystring_7g) { return 403; }" /etc/nginx/sites-enabled/$domain
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        echo 
    fi
    
    restart_webserver
    echo
    echo "Enabled 7G Firewall Query String Rules for $domain"
    exit

fi


if [[ $action == "disable_query_string_7g" || $action == "8" ]]; then
    if [ "$webserver_type" = "nginx" ]; then
        sed -i "/bad_querystring_7g/d" /etc/nginx/sites-enabled/$domain
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        echo 
    fi
    
    restart_webserver
    echo
    echo "Disabled 7G Firewall Query String Rules for $domain"
    exit

fi


if [[ $action == "enable_request_string_7g" || $action == "9" ]]; then
    if [ "$webserver_type" = "nginx" ]; then
        # important to escape the variable
        sed -i "/client_max_body_size/a if (\$bad_request_7g) { return 403; }" /etc/nginx/sites-enabled/$domain
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        echo 
    fi
    
    restart_webserver
    echo
    echo "Enabled 7G Firewall Request String Rules for $domain"
    exit

fi


if [[ $action == "disable_request_string_7g" || $action == "10" ]]; then
    if [ "$webserver_type" = "nginx" ]; then
        sed -i "/bad_request_7g/d" /etc/nginx/sites-enabled/$domain
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        echo 
    fi
    
    restart_webserver
    echo
    echo "Disabled 7G Firewall Request String Rules for $domain"
    exit

fi


if [[ $action == "enable_request_method_7g" || $action == "11" ]]; then
    if [ "$webserver_type" = "nginx" ]; then
        # important to escape the variable
        sed -i "/client_max_body_size/a if (\$not_allowed_method_7g) { return 405; }" /etc/nginx/sites-enabled/$domain
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        echo 
    fi
    
    restart_webserver
    echo
    echo "Enabled 7G Firewall Request Method Rules for $domain"
    exit

fi


if [[ $action == "disable_request_method_7g" || $action == "12" ]]; then
    if [ "$webserver_type" = "nginx" ]; then
        sed -i "/not_allowed_method_7g/d" /etc/nginx/sites-enabled/$domain
    elif [ "$webserver_type" = "ols" ]  || [ "$webserver_type" = "ols-enterprise" ]; then
        echo 
    fi
    
    restart_webserver
    echo
    echo "Disabled 7G Firewall Request Method Rules for $domain"
    exit

fi
